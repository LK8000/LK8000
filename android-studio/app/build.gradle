buildscript {
    repositories {
        google()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.26.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    google()
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "org.lk8000"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 46
        versionName "7.1a"
        setProperty("archivesBaseName", "LK8000-$versionName")
        manifestPlaceholders = [
                applicationLabel: "@string/app_name",
                applicationIcon: "@drawable/icon"
        ]

        externalNativeBuild {
            cmake {
                // Passes optional arguments to CMake.
                arguments "-DANDROID_ARM_NEON=TRUE"

                // Sets a flag to enable format macro constants for the C compiler.
                cFlags "-D__STDC_FORMAT_MACROS"

                // Sets optional flags for the C++ compiler.
                cppFlags "-fexceptions", "-frtti", "-std=c++17"
            }
        }
        copy {
            from "../../Common/Data/Language/Translations"
            into "src/main/assets/language"
        }
        copy {
            from "../../Common/Data/Language"
            into "src/main/assets/language"
            include "ENG_MSG.TXT"
            include "ENG_HELP.TXT"
            include "ENGLISH.LNG"
        }
        copy {
            from "../../Common/Data/Language"
            into "src/main/assets"
            include "DEFAULT_MENU.TXT"
        }
        copy {
            from "../../Common/Distribution/LK8000/_System/"
            into "src/main/assets"
            include "CREDITS.TXT"
        }
        copy {
            from "../../Common/Distribution/LK8000/_Polars"
            into "src/main/assets/polars"
            include "*.plr"
            exclude "Example.*"
        }
        copy {
            from "../../Common/Data/Sounds", "../../Common/Distribution/LK8000/_System/_Sounds",
                    "../../Common/Distribution/LK8000/_System/_Sounds/OPTIONALS"
            into "src/main/assets/sounds"
            include "*.wav"
            include "*.WAV"
        }
        copy {
            from "../../Common/Data/Fonts"
            into "src/main/assets/fonts"
            include "*.ttf"
        }
        copy {
            from "../../Common/Distribution/LK8000/_Maps"
            into "src/main/assets/distribution/maps"
            include "*.*"
        }
        copy {
            from "../../Common/Distribution/LK8000/_Waypoints"
            into "src/main/assets/distribution/waypoints"
            include "*.*"
        }
        copy {
            from "../../Common/Distribution/LK8000/_Airspaces"
            into "src/main/assets/distribution/airspaces"
            include "*.*"
        }
        copy {
            from "../../Common/Distribution/LK8000/_Tasks"
            into "src/main/assets/distribution/tasks"
            include "*.*"
        }
        copy {
            from "../../Common/Distribution/LK8000/_Logger"
            into "src/main/assets/distribution/logger"
            include "*.*"
        }
        copy {
            from "../../Common/Distribution/LK8000/_Configuration"
            into "src/main/assets/distribution/configuration"
            include "DEMO.prf", "CAR.prf", "TREKKING.prf", "NOTEDEMO.TXT", "IDFLARM.TXT"
        }
        copy {
            from "../../Common/Distribution/LK8000/_Polars"
            into "src/main/assets/distribution/polars"
            include "Example.*"
        }
    }
    sourceSets {
        main {
            java.srcDirs += ["../../android/src"]
            manifest.srcFile "../../android/AndroidManifest.xml"
            res.srcDirs = ["src/main/res",
                           "../../android/res"]
        }
    }
    flavorDimensions "full"
    buildTypes {
        release {
            minifyEnabled false

            // play store identify app using <applicationId, signing certificat> pair
            // we can't change this is because first distrib on play Store has been made with this suffix
            applicationIdSuffix ".beta"

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            manifestPlaceholders = [
                    applicationLabel: "@string/app_name_debug",
                    applicationIcon: "@drawable/icon_debug"
            ]
            sourceSets {
                debug {
                    res.srcDirs = ["src/main/res",
                                   "../../android/res",
                                   "../../android/res_debug"]
                }
            }
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
        }
        beta {
            initWith(buildTypes.release)

            applicationIdSuffix ".test"
            manifestPlaceholders = [
                    applicationLabel: "@string/app_name_beta",
                    applicationIcon: "@drawable/icon_beta"
            ]
            sourceSets {
                beta {
                    res.srcDirs = ["src/main/res",
                                   "../../android/res",
                                   "../../android/res_beta"]
                }
            }
        }
    }
    productFlavors {
        x86 {
            dimension "full"
            ndk {
                abiFilter "x86"
            }
        }
        x86_64 {
            dimension "full"
            ndk {
                abiFilter "x86_64"
            }
        }
        armv7 {
            dimension "full"
            ndk {
                abiFilter "armeabi-v7a"
            }
        }
        arm64 {
            dimension "full"
            ndk {
                abiFilter "arm64-v8a"
            }
        }
        fat {
            dimension "full"
            ndk {
                abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "../../CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }
    implementation('com.crashlytics.sdk.android:crashlytics-ndk:2.0.5@aar') {
        transitive = true
    }
    implementation 'com.android.support:support-compat:26.1.0'
    implementation 'com.github.ytai.ioio:IOIOLibAndroidBluetooth:5.07'
    implementation 'com.github.ytai.ioio:IOIOLibAndroidAccessory:5.07'
    implementation 'com.github.ytai.ioio:IOIOLibAndroidDevice:5.07'
    implementation 'com.github.felHR85:UsbSerial:4.5.1'
}

crashlytics {
    enableNdk true
    manifestPath '../../android/AndroidManifest.xml'
}
