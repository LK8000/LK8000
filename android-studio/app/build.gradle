apply plugin: "com.android.application"


// Signing config documentation :
//    https://developer.android.com/studio/publish/app-signing#secure-shared-keystore
def keystoreProperties = new Properties()
def keystorePropertiesFile = "keystore.properties"
if (rootProject.file(keystorePropertiesFile).exists()) {
    // Load your keystore.properties file into the keystoreProperties object.
    keystoreProperties.load(rootProject.file(keystorePropertiesFile).newDataInputStream())
} else {
    // define all property to allow to build debug without 'keystore.properties' file.
    keystoreProperties.put('storeFile',  '-')
    keystoreProperties.put('storePassword', '-')
    keystoreProperties.put('keyAlias', '-')
    keystoreProperties.put('keyPassword', '-')
}

android {
    compileSdk 34
    ndkVersion "26.3.11579264"

    namespace "org.LK8000"

    defaultConfig {
        applicationId "org.lk8000"
        minSdkVersion 21 // Lollipop
        targetSdkVersion 34
        versionCode 114
        versionName "7.4.13"
        setProperty("archivesBaseName", "LK8000-$versionName")
        // Required when setting minSdkVersion to 20 or lower
        multiDexEnabled true

        externalNativeBuild {
            cmake {
                // Passes optional arguments to CMake.
                arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_STL=c++_shared"
            }
        }
    }
    buildFeatures {
        prefab true
        viewBinding true
        buildConfig true
    }
    sourceSets {
        main {
            java.srcDirs += ["../../android/src"]
            manifest.srcFile "../../android/AndroidManifest.xml"
            res.srcDirs = ["src/main/res",
                           "../../android/res"]
        }
    }

    signingConfigs {
        config {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false

            // play store identify app using <applicationId, signing certificate> pair
            // we can't change this is because first distro on play Store has been made with this suffix
            applicationIdSuffix ".beta"

            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.config
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
        }
        beta {
            initWith(buildTypes.release)

            applicationIdSuffix ".test"
        }
    }
    externalNativeBuild {
        cmake {
            version "3.22.1"
            path "../../CMakeLists.txt"
        }
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 17
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {
    implementation fileTree(include: ["*.jar"], dir: "libs")

    implementation "androidx.camera:camera-camera2:1.4.0-alpha04"
    implementation "androidx.camera:camera-lifecycle:1.4.0-alpha04"
    implementation "androidx.camera:camera-view:1.4.0-alpha04"

    implementation "androidx.core:core:1.12.0"

    implementation "com.google.zxing:core:3.5.3"

    implementation "com.github.ytai.ioio:IOIOLibAndroidBluetooth:5.07"
    implementation "com.github.ytai.ioio:IOIOLibAndroidAccessory:5.07"
    implementation "com.github.ytai.ioio:IOIOLibAndroidDevice:5.07"

    implementation "com.github.felHR85:UsbSerial:6.1.0"

    implementation "com.github.brunotl:geographiclib-prefab:2.1.2"

    implementation "com.github.brunotl:boost_intrusive:1.81.0"
    implementation "com.github.brunotl:boost_container:1.81.0"

    implementation "com.google.oboe:oboe:1.8.1"
    implementation "com.google.android.material:material:1.11.0"

    implementation "com.github.brunotl.ndk.thirdparty:openssl:3.2.1-beta-4"
    implementation "com.github.brunotl.ndk.thirdparty:curl:7.85.0-beta-4"

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
}

clean() {
    delete "src/main/assets/language",
           "src/main/assets/distribution",
           "src/main/assets/fonts",
           "src/main/assets/polars",
           "src/main/assets/sounds",
           "src/main/assets/CREDITS.TXT",
           "src/main/assets/DEFAULT_MENU.TXT"
}

tasks.register('syncAsset', Sync) {
    from "../../Common/Data/Language",
            "../../Common/Distribution/LK8000/_System/"
    into "src/main/assets"
    include "DEFAULT_MENU.TXT",
            "CREDITS.TXT"
    preserve {
        include "bitmaps/**"
        include "lkmap/**"
    }
    duplicatesStrategy "WARN"
}
tasks.register('syncAssetLanguages', Sync) {
    from "../../Common/Data/Language/Translations",
            "../../Common/Data/Language"
    into "src/main/assets/language"
    include "*.json"
}
tasks.register('syncAssetPolars', Sync) {
    from "../../Common/Distribution/LK8000/_Polars"
    into "src/main/assets/polars"
    include "*.plr"
    exclude "Example.*"
}
tasks.register('syncAssetSounds', Sync) {
    from "../../Common/Data/Sounds",
            "../../Common/Distribution/LK8000/_System/_Sounds",
            "../../Common/Distribution/LK8000/_System/_Sounds/OPTIONALS"
    into "src/main/assets/sounds"
    include "*.wav",
            "*.WAV"
    duplicatesStrategy "WARN"
}
tasks.register('syncAssetFonts', Sync) {
    from "../../Common/Data/Fonts"
    into "src/main/assets/fonts"
    include "*.ttf"
}
tasks.register('syncAssetDistribtionMaps', Sync) {
    from "../../Common/Distribution/LK8000/_Maps"
    into "src/main/assets/distribution/maps"
}
tasks.register('syncAssetDistribtionWaypoints', Sync) {
    from "../../Common/Distribution/LK8000/_Waypoints"
    into "src/main/assets/distribution/waypoints"
}
tasks.register('syncAssetDistribtionAirspaces', Sync) {
    from "../../Common/Distribution/LK8000/_Airspaces"
    into "src/main/assets/distribution/airspaces"
}
tasks.register('syncAssetDistribtionTasks', Sync) {
    from "../../Common/Distribution/LK8000/_Tasks"
    into "src/main/assets/distribution/tasks"
}
tasks.register('syncAssetDistribtionLogger', Sync) {
    from "../../Common/Distribution/LK8000/_Logger"
    into "src/main/assets/distribution/logger"
}
tasks.register('syncAssetDistribtionConfiguration', Sync) {
    from "../../Common/Distribution/LK8000/_Configuration"
    into "src/main/assets/distribution/configuration"
    include "DEMO.prf",
            "CAR.prf",
            "TREKKING.prf",
            "NOTEDEMO.TXT",
            "IDFLARM.TXT"
}
tasks.register('syncAssetDistribtionPolars', Sync) {
    from "../../Common/Distribution/LK8000/_Polars"
    into "src/main/assets/distribution/polars"
    include "Example.*"
}

preBuild.dependsOn(
        syncAsset,
        syncAssetLanguages,
        syncAssetPolars,
        syncAssetSounds,
        syncAssetFonts,
        syncAssetDistribtionMaps,
        syncAssetDistribtionWaypoints,
        syncAssetDistribtionAirspaces,
        syncAssetDistribtionTasks,
        syncAssetDistribtionLogger,
        syncAssetDistribtionConfiguration,
        syncAssetDistribtionPolars
    )
